<html><head><title>[grpconst] 6 The Upwards Extension Method</title></head>
<body text="#000000" bgcolor="#ffffff">
[<a href = "chapters.htm">Up</a>] [<a href ="CHAP005.htm">Previous</a>] [<a href ="CHAP007.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<h1>6 The Upwards Extension Method</h1><p>
<p>
<a name = "I0"></a>

This is a method to construct up to isomorphism the finite groups of
a given order. For this purpose it will loop over all possible perfect
groups and construct upwards extensions by soluble groups. This, in turn, 
is done by iterated cyclic extensions.
<p>
Since this method is less efficient than the above two methods, it
will usually only be used for the determination of non-soluble groups.
<p>
<a name = ""></a>
<li><code>UpwardsExtensions( </code><var>G</var><code>, </code><var>s</var><code> ) F</code>
<p>
Let <var>G</var> be a permutation group and <var>s</var> a positive integer.  This function
returns a list corresponding to <code>DivisorsInt(s)</code>.  Let <var>t</var> be the <var>i</var>-th 
divisor of <var>s</var>. Then the <var>i</var>-th entry in the output is a list of all 
extensions of <var>G</var> by a soluble group of order <var>t</var> up to isomorphism. The 
returned groups are permutation groups again. 
<p>
Typically, this function is applied to perfect groups <var>G</var>, which may be 
obtained from the perfect groups catalogue in GAP (see the Section on
<code>Finite perfect groups</code> in the reference manual).
<p>
The most time-consuming part of the computation in <code>UpwardsExtensions</code>
is the isomorphism test. The following function does no reduction to
isomorphism type representatives and hence is much more efficient.
<p>
<a name = ""></a>
<li><code>CyclicExtensions( </code><var>G</var><code>, </code><var>p</var><code> ) F</code>
<p>
Here <var>G</var> should be a  permutation group and <var>p</var> a prime. This function 
computes a list of permutation groups containing the upwards extensions
of <var>G</var> by the cyclic group of order <var>p</var>, but not reduced to isomorphism
type representatives. 
<p>
There is an info class <code>InfoUpExt</code> available with values from 1 to 3.
<p>
<pre>
gap&gt; G := PerfectGroup( IsPermGroup, 120, 1 );
A5 2^1
gap&gt; c := CyclicExtensions( G, 2 );;
gap&gt; List( c, IdGroup );   
[ [ 240, 94 ], [ 240, 93 ], [ 240, 90 ], [ 240, 89 ] ]
gap&gt; H := c[1];
&lt;permutation group of size 240 with 2 generators&gt;
gap&gt; CyclicExtensions( H, 2 );;
gap&gt; List(last, IdGroup);
[ [ 480, 960 ], [ 480, 955 ], [ 480, 222 ], [ 480, 222 ], [ 480, 953 ], 
  [ 480, 953 ], [ 480, 957 ], [ 480, 957 ], [ 480, 949 ], [ 480, 950 ], 
  [ 480, 219 ], [ 480, 219 ] ]

gap&gt; u := UpwardsExtensions( G, 4 );;
gap&gt; List( u, Length );
[ 1, 4, 14 ]
gap&gt; List( u[3], IdGroup);
[ [ 480, 960 ], [ 480, 959 ], [ 480, 950 ], [ 480, 222 ], [ 480, 221 ], 
  [ 480, 947 ], [ 480, 949 ], [ 480, 219 ], [ 480, 948 ], [ 480, 218 ], 
  [ 480, 955 ], [ 480, 957 ], [ 480, 953 ], [ 480, 946 ] ]
</pre>
<p>
In case that we want to extend a perfect group with trivial
centre, then there is a better algorithm available. This is
implemented as well and can be used with the following functions.
<p>
<a name = ""></a>
<li><code>UpwardsExtensionsNoCentre( </code><var>G</var><code>, </code><var>s</var><code> ) F</code>
<p>
Let <var>G</var> be a perfect permutation group with trivial centre and <var>s</var> 
a positive integer. This function returns a list of all extensions 
of <var>G</var> by a soluble group of order <var>s</var> up to isomorphism. The returned 
groups are permutation groups again. Note that, in difference to 
<code>UpwardsExtensions</code> this function does not return the extensions by
groups of order dividing <var>s</var>. Moreover, the implementation of the
function requires that all soluble groups of order <var>s</var> are available
as <code>SmallGroups</code>. The implementation then uses the following function
to determine groups.
<p>
<a name = ""></a>
<li><code>ExtensionsByGroupNoCentre( </code><var>G</var><code>, </code><var>H</var><code> ) F</code>
<p>
Let <var>G</var> be a perfect permutation group with trivial centre and <var>H</var> a soluble
group. This functions returns all extensions of <var>G</var> by <var>H</var> up to isomorphism.  
<p>
[<a href = "chapters.htm">Up</a>] [<a href ="CHAP005.htm">Previous</a>] [<a href ="CHAP007.htm">Next</a>] [<a href = "theindex.htm">Index</a>]
<P>
<address>grpconst manual<br>January 2020
</address></body></html>